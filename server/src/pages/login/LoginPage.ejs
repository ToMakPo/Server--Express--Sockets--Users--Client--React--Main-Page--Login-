<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Login</title>

	<style>
		form:not([hidden]) {
			display: flex;
			flex-direction: column;
			align-items: center;
			font-family: 'quicksand', sans-serif;
			gap: 10px;
		}

		form input:is([type="text"], [type="password"], [type="email"]) {
			width: 300px;
			height: 40px;
			padding: 0 10px;
			border: 1px solid #ccc;
			border-radius: 5px
		}

		form input[type="submit"] {
			width: 300px;
			height: 40px;
			background-color: #007bff;
			color: white;
			border: none;
			border-radius: 5px;
			cursor: pointer;
		}

		form a {
			color: #007bff;
			text-decoration: none;
		}

		form a:hover {
			text-decoration: underline;
		}

		form a:active {
			color: #0056b3;
		}

		div[id*="check"] {
			font-size: xx-small;
			margin: -5px;
		}
		div[id*="check"] p {
			margin: 0;
			padding: 0;
		}
	</style>
</head>
<body>
	<form id="login-form" action="/api/users/login" method="POST">
		<h1>Login</h1>
		<input type="text" name="credentials" placeholder="Username or Email" autocomplete="username" autofocus>
		<input type="password" name="password" placeholder="Password" autocomplete="current-password">
		<input type="submit" value="Submit">
		<a href="#" onclick="toggleForm()">Don't have an account? Register</a>
	</form>

	<form id="register-form" action="/api/users/register" method="POST" hidden>
		<h1>Register</h1>
		<input type="text" name="username" placeholder="Username" oninput="checkUsername()" autocomplete="username" autofocus>
		<div id="username-check" hidden></div>
		
		<input type="email" name="email" placeholder="Email" oninput="checkEmail()" autocomplete="email">
		<div id="email-check" hidden></div>

		<input type="password" name="password" placeholder="Password" oninput="checkPassword()" autocomplete="new-password">
		<input type="password" name="confirmPassword" placeholder="Confirm Password" oninput="checkPassword()" autocomplete="new-password">
		<div id="password-check" hidden></div>

		<input type="submit" value="Submit">
		<a href="#" onclick="toggleForm()">Already have an account? Login</a>
	</form>

	<script>
		function toggleForm() {
			const loginForm = document.getElementById('login-form');
			const registerForm = document.getElementById('register-form');

			if (loginForm.hasAttribute('hidden')) {
				loginForm.removeAttribute('hidden');
				registerForm.setAttribute('hidden', '');
			} else {
				loginForm.setAttribute('hidden', '');
				registerForm.removeAttribute('hidden');
			}
		}

		// Fetch the IP address from the server and set it in the form
		async function fetchIpAddress() {
			try {
				const response = await fetch('https://api.ipify.org?format=json');
				const data = await response.json();
				return data.ip
			} catch (error) {
				console.error('Error fetching IP address:', error);
				return 'no-ip'
			}
		}
		
		const currentUrl = window.location.origin

		async function checkUsername() {
			const username = document.querySelector('#register-form input[name="username"]').value;
			
			const queryParams = new URLSearchParams({ username }).toString()
			const response = await fetch(`/api/users/check-username?${queryParams}`, { method: 'GET' })
				.then(response => response.json())

			const messageBox = document.getElementById('username-check')
			messageBox.innerHTML = ''
			
			if (!username) {
				messageBox.setAttribute('hidden', 'lol')
			} else {
				messageBox.removeAttribute('hidden')
			}

			if (response.passed) {
				messageBox.innerHTML = '<p style="color: green;">Username is available!</p>';
			} else {
				messageBox.innerHTML = '<p style="color: red;">' + response.message + '</p>';
			}
		}
		async function checkEmail() {
			const email = document.querySelector('#register-form input[name="email"]').value

			const queryParams = new URLSearchParams({ email }).toString()
			const response = await fetch(`/api/users/check-email?${queryParams}`, { method: 'GET' })
				.then(response => response.json())

			const messageBox = document.getElementById('email-check')
			messageBox.innerHTML = ''

			if (!email) {
				messageBox.setAttribute('hidden', '')
			} else {
				messageBox.removeAttribute('hidden')
			}

			if (response.passed) {
				messageBox.innerHTML = '<p style="color: green;">Email is available!</p>';
			} else {
				messageBox.innerHTML = '<p style="color: red;">' + response.message + '</p>';
			}
		}
		async function checkPassword() {
			const password = document.querySelector('#register-form input[name="password"]').value;
			const confirmPassword = document.querySelector('#register-form input[name="confirmPassword"]').value;

			const queryParams = new URLSearchParams({ password, getAllErrors: true }).toString()
			const response = await fetch(`/api/users/check-password?${queryParams}`, { method: 'GET' })
				.then(response => response.json())

			const messageBox = document.getElementById('password-check')
			messageBox.innerHTML = ''

			if (!password && !confirmPassword) {
				messageBox.setAttribute('hidden', '')
			} else {
				messageBox.removeAttribute('hidden')
			}

			const requirements = response.data
			requirements.match = [password === confirmPassword, 'Password must match the confirmation password.']
			
			Object.values(requirements).forEach(([passed, message]) => {
				const child = document.createElement('p');
				child.style.color = passed ? 'green' : 'red';
				child.textContent = (passed ? '✔️' : '❌') + ' - ' + message;
				messageBox.appendChild(child)
			})
		}

		async function login(credentials, password) {
			const loginForm = document.getElementById('login-form')
			const params = {
				credentials: credentials,
				password: password,
				ipAddress: await fetchIpAddress()
			}

			const responce = await fetch('/api/users/login', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(params)
			}).then(response => response.json())

			if (responce.passed) {
				window.location.href = currentUrl
			} else {
				alert(responce.message) // TODO: make a nice error message
			}
		}
		document.getElementById('login-form').addEventListener('submit', async function(event) {
			event.preventDefault()
			const credentials = document.querySelector('#login-form input[name="credentials"]').value
			const password = document.querySelector('#login-form input[name="password"]').value
			await login(credentials, password)
		})

		async function register(username, email, password) {
			const registerForm = document.getElementById('register-form')
			const params = {
				username: username,
				email: email,
				password: password,
				ipAddress: await fetchIpAddress()
			}

			const {registerResponse, loginResponse} = await fetch('/api/users/register', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(params)
			}).then(response => response.json())

			if (!registerResponse.passed) {
				alert(registerResponse.message) // TODO: make a nice error message
			} else
			if (!loginResponse.passed) {
				alert(loginResponse.message) // TODO: make a nice error message
			} else {
				window.location.href = currentUrl
			}
		}
		document.getElementById('register-form').addEventListener('submit', async function(event) {
			event.preventDefault()
			const username = document.querySelector('#register-form input[name="username"]').value
			const email = document.querySelector('#register-form input[name="email"]').value
			const password = document.querySelector('#register-form input[name="password"]').value
			await register(username, email, password)
		})
	</script>
</body>
</html>